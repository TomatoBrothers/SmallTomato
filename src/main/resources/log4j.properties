#注意，需在控制台输入，只需将其中一个appender定义为stdout为记录所有
#注意，rootLogger默认是对整个工程生效
#注意，如果只想对某些包操作，那么：log4j.logger.com.hutu=info, stdout，表示该日志对package com.hutu生效
#注意，这样做可以区分dev/线上，也可以减小性能影响：if(log.isDebugEnabled()){log.debug();}
log4j.rootLogger=DEBUG,stdout,file

#控制台ConsoleAppender
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Threshold=DEBUG
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n

#one log file a day
#每天产生一个日志文件DailyRollingFileAppender
#文件大小到达指定尺寸的时候产生新文件RollingFileAppender
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.Threshold=DEBUG

#指定消息输出到zlly.log文件中
log4j.appender.file.File=D:/logs/smallTomato/server.log

#定义每个文件的大小，超过这个大小，则新建一个文件，注意单位 MB 或 KB
# log4j.appender.file.MaxFileSize=20MB

#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
log4j.appender.file.Append = true

#每小时滚动一次日志文件，即每小时产生一个新的日志文件。
log4j.appender.file.DatePattern=yyyy-MM-dd-HH'.log'

#可以灵活地指定布局模式，就是可以自定义输出样式PatternLayout
log4j.appender.file.layout=org.apache.log4j.PatternLayout

#-这个就是针对PatternLayou你自定义的输出格式
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-ddHH\:mm\:ss} [%t] %-5p %c(line-%L) %-4r %x - %m%n

